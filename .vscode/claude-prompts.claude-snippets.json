{
  "Claude Prompt with Context": {
    "prefix": "cprompt",
    "body": [
      "[Kontext: DEVELOPMENT.md - Modulare Architektur]",
      "",
      "Aufgabe: $1",
      "Scope: $2",
      "",
      "$0"
    ],
    "description": "Standard Claude Prompt mit DEVELOPMENT.md Kontext"
  },

  "Claude New Feature Request": {
    "prefix": "cfeature",
    "body": [
      "📋 Kontext: Siehe DEVELOPMENT.md (modulare Architektur)",
      "",
      "Aufgabe: Erstelle eine neue $1 Komponente/Feature",
      "",
      "Anforderungen:",
      "- $2",
      "- $3",
      "- $4",
      "",
      "Ordner-Struktur:",
      "src/$5/",
      "  ├── ${1}.tsx",
      "  ├── ${1}.types.ts",
      "  └── ${1}.test.ts",
      "",
      "WICHTIG: Keine anderen Dateien ändern ohne zu fragen!",
      "",
      "$0"
    ],
    "description": "Template für neue Features/Komponenten"
  },

  "Claude Bug Fix Request": {
    "prefix": "cbugfix",
    "body": [
      "[Kontext: DEVELOPMENT.md]",
      "",
      "🐛 Bug-Fix: $1",
      "",
      "Problem:",
      "$2",
      "",
      "Fehlermeldung:",
      "```",
      "$3",
      "```",
      "",
      "Betroffene Datei(en):",
      "- $4",
      "",
      "Erwartetes Verhalten:",
      "$5",
      "",
      "Scope: NUR die oben genannten Dateien ändern!",
      "",
      "$0"
    ],
    "description": "Template für Bug-Fixes"
  },

  "Claude Refactor Request": {
    "prefix": "crefactor",
    "body": [
      "[Kontext: DEVELOPMENT.md - Modulare Architektur]",
      "",
      "♻️ Refactoring: $1",
      "",
      "Aktueller Code:",
      "$2",
      "",
      "Ziel:",
      "$3",
      "",
      "Betroffene Dateien:",
      "✅ $4",
      "❌ Keine anderen Dateien ändern!",
      "",
      "Wichtig:",
      "- Funktionalität muss identisch bleiben",
      "- Tests müssen weiterhin laufen",
      "- Modulare Struktur beibehalten",
      "",
      "$0"
    ],
    "description": "Template für Refactoring-Anfragen"
  },

  "Claude Component Creation": {
    "prefix": "ccomponent",
    "body": [
      "📋 Siehe DEVELOPMENT.md!",
      "",
      "Aufgabe: Erstelle ${1:ComponentName} Komponente",
      "",
      "Props:",
      "```typescript",
      "interface ${1}Props {",
      "  $2",
      "}",
      "```",
      "",
      "Features:",
      "- $3",
      "- $4",
      "",
      "Pfad: src/components/${1}/",
      "Dateien:",
      "  ├── ${1}.tsx",
      "  ├── ${1}.types.ts",
      "  ├── ${1}.test.ts",
      "  └── index.ts",
      "",
      "Style: ${5|Tailwind,CSS Modules,Styled Components|}",
      "",
      "$0"
    ],
    "description": "Detailliertes Template für neue Komponenten"
  },

  "Claude API Integration": {
    "prefix": "capi",
    "body": [
      "[Kontext: DEVELOPMENT.md]",
      "",
      "🔌 API Integration: $1",
      "",
      "Endpoint: ${2:https://api.example.com/endpoint}",
      "Methode: ${3|GET,POST,PUT,DELETE,PATCH|}",
      "",
      "Request:",
      "```typescript",
      "$4",
      "```",
      "",
      "Expected Response:",
      "```typescript",
      "$5",
      "```",
      "",
      "Erstelle:",
      "- Service-Funktion in src/services/${1}/",
      "- TypeScript Types",
      "- Error Handling",
      "- Optional: Custom Hook für Component-Nutzung",
      "",
      "Scope: Nur neue Dateien, keine bestehenden ändern!",
      "",
      "$0"
    ],
    "description": "Template für API-Integrationen"
  },

  "Claude Test Request": {
    "prefix": "ctest",
    "body": [
      "[Kontext: DEVELOPMENT.md]",
      "",
      "🧪 Test-Erstellung für: $1",
      "",
      "Zu testende Datei:",
      "$2",
      "",
      "Test-Cases:",
      "1. $3",
      "2. $4",
      "3. $5",
      "",
      "Test-Framework: ${6|Jest,Vitest,React Testing Library|}",
      "",
      "Erstelle: ${2}.test.ts",
      "",
      "$0"
    ],
    "description": "Template für Test-Erstellung"
  },

  "Claude Documentation Request": {
    "prefix": "cdocs",
    "body": [
      "📚 Dokumentation: $1",
      "",
      "Aufgabe: Erstelle/Erweitere Dokumentation für $2",
      "",
      "Inhalte:",
      "- Übersicht/Zweck",
      "- Installation/Setup (falls relevant)",
      "- API/Props-Dokumentation",
      "- Verwendungsbeispiele",
      "- ${3:Weitere Anforderungen}",
      "",
      "Format: ${4|JSDoc,Markdown,README|}",
      "",
      "$0"
    ],
    "description": "Template für Dokumentations-Anfragen"
  },

  "Claude Quick Task": {
    "prefix": "ctask",
    "body": [
      "[DEVELOPMENT.md]",
      "",
      "$1",
      "",
      "Scope: $2",
      "$0"
    ],
    "description": "Kurzes Template für schnelle Aufgaben"
  },

  "Claude Session Start": {
    "prefix": "cstart",
    "body": [
      "Hi Claude! 👋",
      "",
      "Projekt-Kontext:",
      "📋 Bitte lies DEVELOPMENT.md für Architektur-Richtlinien",
      "🏗️ Dieses Projekt folgt strikt modularer Architektur",
      "⚠️ Ändere nur explizit genannte Dateien",
      "",
      "Bestätige kurz, dass du die Regeln verstanden hast, dann starten wir!",
      "",
      "$0"
    ],
    "description": "Template für Session-Start mit Claude"
  },

  "Claude Multi-Step Task": {
    "prefix": "cmulti",
    "body": [
      "[Kontext: DEVELOPMENT.md - Modulare Architektur]",
      "",
      "📋 Mehrstufige Aufgabe: $1",
      "",
      "Schritt 1: $2",
      "Scope: $3",
      "",
      "Schritt 2: $4",
      "Scope: $5",
      "",
      "Schritt 3: $6",
      "Scope: $7",
      "",
      "WICHTIG:",
      "- Arbeite Schritt für Schritt",
      "- Warte auf Bestätigung nach jedem Schritt",
      "- Keine Änderungen außerhalb des definierten Scope",
      "",
      "Lass uns mit Schritt 1 beginnen!",
      "",
      "$0"
    ],
    "description": "Template für mehrstufige Aufgaben"
  },

  "Claude Code Review Request": {
    "prefix": "creview",
    "body": [
      "👀 Code Review: $1",
      "",
      "Datei: $2",
      "",
      "Prüfe auf:",
      "- ✅ Entspricht DEVELOPMENT.md Richtlinien",
      "- ✅ Modulare Struktur eingehalten",
      "- ✅ Single Responsibility",
      "- ✅ Type Safety",
      "- ✅ Keine ungewollten Abhängigkeiten",
      "- ✅ ${3:Weitere Kriterien}",
      "",
      "Gib konstruktives Feedback mit Verbesserungsvorschlägen.",
      "",
      "$0"
    ],
    "description": "Template für Code-Review-Anfragen"
  }
}
